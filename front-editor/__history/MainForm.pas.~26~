unit MainForm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Menus, StdCtrls, ComCtrls;

type
  TMain = class(TForm)
    MainMenu1: TMainMenu;
    MenuFile: TMenuItem;
    OpenProject: TMenuItem;
    CloseApp: TMenuItem;
    MenuAbout: TMenuItem;
    Tree: TMemo;
    OpenFile: TOpenDialog;
    SaveFile: TSaveDialog;
    SaveProject: TMenuItem;
    Editor: TMemo;
    RichEdit1: TRichEdit;
    procedure SaveProjectClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure CloseAppClick(Sender: TObject);
    procedure OpenProjectClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Main: TMain;
  FName: string;

implementation

{$R *.dfm}

procedure TMain.CloseAppClick(Sender: TObject);
begin
 Close;
end;

procedure TMain.FormCreate(Sender: TObject);
begin
    Editor.Text := '';
    Tree.Text := '';
end;

procedure TMain.OpenProjectClick(Sender: TObject);
var sr: TSearchRec;
    Text: String;
    a: Integer;
      c : array ['<div>', '</div>' ] of string ;
   I : byte ; {переменна€ I вводитс€ как индекс массива}
begin
 if OpenFile.Execute then
 begin
  FName := OpenFile.FileName;
  RichEdit1.Lines.LoadFromFile(FName);
begin
 Tree.Clear;
 if FindFirst('*.*', faAnyFile, sr) = 0 then
  begin
  repeat
  Tree.Lines.Add(sr.Name);
  until FindNext(sr) <> 0;
  FindClose(sr);
end;
end;
end;
 ///////////////////////////////////////////////////////////
Begin
Text:=c[i]; // “екст который нужно найти и выделить
      Begin
      a:=0;
      While a<=Length(RichEdit1.Text) Do
            Begin
            RichEdit1.SelStart:=RichEdit1.FindText(Text, a, Length(RichEdit1.Text)-a, [stMatchCase]); // или stWholeWord
            RichEdit1.SelLength:=Length(Text);
            RichEdit1.SelAttributes.Color:=clBlue; // окрашиваем в красный цвет
            a:=RichEdit1.SelStart+Length(Text);
            Application.ProcessMessages; // чтоб не зависало, если текст довольно большой
            End;
      End
end;
end;

procedure TMain.SaveProjectClick(Sender: TObject);
begin
SaveFile.FileName := FName;
if SaveFile.Execute then
 begin
  FName := SaveFile.FileName;
  Editor.Lines.SaveToFile(FName);
end;
end;

end.




